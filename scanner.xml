<?xml version="1.0"?>

<machine description="image machine">
    <include file="devise.py" duplicates="true"><check>gphoto2</check></include>
    <dontinclude file="pipeline_image.py"/>

    <sequence name="thing">
        <step call="starti"/>
        <step call="rotate" description="rotate stuff">
            <argument>90</argument>
        </step>
        <step call="endi"/>
    </sequence>

    <pattern name="numeral">
        <rule field="ocr_results" field_type="int"/>
        <rule field="image_binary_key" field_type="str"/>
    </pattern>
    <pattern name="roman_numeral">
        <rule field="ocr_results" field_type="roman"/>
    </pattern>
    <pattern name="string">
        <rule field="ocr_results" field_type="str"/>
    </pattern>
    <pattern name="rest">
        <rule field="uuid" field_type="str"/>
    </pattern>
    
    <peripheral type="slider">
        <output type="integer" destination="/slzzz"/>
    </peripheral>    

    <peripheral type="button" alternative_press="a">
        <output type="integer" value="1" destination="/1"/>
    </peripheral>

    <peripheral type="button" alternative_press="a">
        <output type="integer" value="1" destination="/2"/>
    </peripheral>

    <peripheral type="button" alternative_press=" " description="simulate turning page">
        <!--
            create inside of source to allow programmatic creation of name in /set/<name>/<slurp>?
        -->
        <output type="integer" value="+=2" destination="/set/BAR/marker:capture1"/>
        <output type="integer" value="+=2" destination="/set/BAR/marker:capture2"/>
    </peripheral>

    <peripheral type="viewer">
        <input filter="capture1"/>
    </peripheral>
    <peripheral type="viewer">
        <input filter="capture2" />
    </peripheral>    
    <peripheral type="slurp" source="BAR" name="capture1">

        <input source="/1">
            <call>create_glworb</call>
            <argument>capture1</argument>
        </input>
    </peripheral>
    <peripheral type="slurp" method="generic" source="BAR" name="capture2">
        <!--
            a little awkward since position is stored in
            source
            <set position="0"></set>
            place here or in source?
        -->
        <input source="/2">
            <call>create_glworb</call>
            <argument>capture2</argument>
        </input>
    </peripheral>
    <peripheral type="slurp" method="gphoto2" name="capture3" source="">
        <input source="/bar">
            <call>create_glworb</call>
            <argument>capture3</argument>
        </input>
    </peripheral>
    <!--
    to turn page & set zoom / focus etc...
    need a button that can either:
        call increment_topology via rpc
        directly set camera state in redis keys by 
            setting value (=1)
            increment (inc) (+=1)
            
            if using direct how to handle translation to 
            redis key address?
    reserved channel prefixes?
        /rpc/*
        /set/*

    <peripheral type="button" alternative_press="">
        <output type="integer" value="" destination="/rpc/BAR/topology_increment"/>
    </peripheral>

    <peripheral type="button" alternative_press="">
        <output type="integer" value="1" destination="/set/BAR/markers/capture1"/>
    </peripheral>
    <peripheral type="button" alternative_press="">
        <output type="integer" value="+=1" destination="/set/BAR/markers/capture1"/>
    </peripheral>
    -->
    <!--
        b = boook.Boook('texxt',[('toc',1,'partial'),('index',5,'partial'),('bar',5,'full'),('baz',5,'full'),('zab',5,'full'),('zoom',5,'full')],output_directory=uuuu_path)
    -->
    <source type="primitive_bytes_indexable" source="boook" location="BAR" config="foo.boook">
        <!--call something like foo.boook for config? rather than configuring here? 
        translate position to marker?
        prefer marker?
        -->
        <set peripheral="capture1" symbol="marker" value="-1" overwrite="true"></set>
        <set peripheral="capture2" symbol="marker" value="0" overwrite="true"></set>

        <boook>
            <section pages="1" type="partial">toc</section>
            <section pages="5" type="partial">index</section>
            <section pages="5" type="full">bar</section>
            <section pages="5" type="full">baz</section>
            <section pages="5" type="full">zab</section>
            <section pages="5" type="full">zoom</section>
        </boook>
    </source>
</machine>
