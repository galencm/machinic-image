#!/usr/bin/python3
#!!! generated by gsl !!!
#gsl -script:peripheral.py.gsl io.xml

import paho.mqtt.client as mosquitto
import sys
import time
from curtsies import Input
import consul
import zerorpc
from PIL import Image
import redis
from io import BytesIO


def lookup(service):
    c = consul.Consul()
    services = {k:v for (k,v) in c.agent.services().items() if k.startswith("_nomad")}
    for k in services.keys():
        if services[k]['Service'] == service:
                service_ip,service_port = services[k]['Address'],services[k]['Port']
                return service_ip,service_port
                break
    return None,None

# mqtt_ip,mqtt_port = lookup('mqtt')
# cli = mosquitto.Client()
# cli.connect(mqtt_ip, mqtt_port, 60)
rs_ip,rs_port = lookup('redis')
r = redis.StrictRedis(host=rs_ip, port=str(rs_port),decode_responses=True)
binary_r = redis.StrictRedis(host=rs_ip, port=str(rs_port))
pubsub = r.pubsub()
subs = (
        'capture1',
)

pubsub.subscribe(subs)

for message in pubsub.listen():
    print(message)

    try:
        time.sleep(0.1)
        glworb = r.hgetall("glworb:"+message['data'])
        binary = binary_r.get(glworb['image_binary_key'])
        print(binary)
        binary_data = BytesIO(binary)
        img = Image.open(binary_data)
        img.show()
        img.close()

    except Exception as ex:
        print(">>>>>>",ex)
        pass
    # f = io.BytesIO()
    # contents = binary_r.get(message['data'])

